name: Full Docker Build

on:
  workflow_dispatch:
    inputs:
      no_cache:
        description: 'Build without using cache'
        required: false
        default: 'false'
  schedule:
    - cron: '0 3 * * *' # daily at 03:00 UTC
  push:
    branches: [ master, develop ]
    paths:
      - 'backend/**'
      - 'frontend/**'
      - 'backend/Dockerfile.prod'
      - 'frontend/Dockerfile.prod'
      - 'docker-compose.prod.yml'
      - 'backend/poetry.lock'
      - 'backend/pyproject.toml'
      - 'frontend/package-lock.json'
      - 'frontend/package.json'
      - 'scripts/**'
  pull_request:
    types: [opened, synchronize, labeled, reopened]
    branches: [ master, develop ]

concurrency:
  group: docker-build-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

env:
  # Default API URL used only during frontend image build
  VITE_API_URL: http://localhost/api
  DOCKER_BUILDKIT: 1

jobs:
  build:
    # Run always for push/schedule/dispatch; for PRs only when labeled 'ci:full-docker-build'
    if: |
      github.event_name != 'pull_request' || contains(github.event.pull_request.labels.*.name, 'ci:full-docker-build')
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Compute cache options
        id: cache
        run: |
          NO_CACHE="${{ github.event.inputs.no_cache }}"
          if [ "$NO_CACHE" = "true" ]; then
            echo "USE_CACHE=false" >> $GITHUB_OUTPUT
          else
            echo "USE_CACHE=true" >> $GITHUB_OUTPUT
          fi

      - name: Build backend image (cached)
        uses: docker/build-push-action@v6
        with:
          context: backend
          file: backend/Dockerfile.prod
          push: false
          tags: backend:ci-test
          platforms: linux/amd64
          cache-from: ${{ steps.cache.outputs.USE_CACHE == 'true' && 'type=gha,scope=backend' || '' }}
          cache-to: ${{ steps.cache.outputs.USE_CACHE == 'true' && 'type=gha,mode=max,scope=backend' || '' }}

      - name: Build frontend image (cached)
        uses: docker/build-push-action@v6
        with:
          context: frontend
          file: frontend/Dockerfile.prod
          push: false
          tags: frontend:ci-test
          platforms: linux/amd64
          build-args: |
            VITE_API_URL=${{ env.VITE_API_URL }}
          cache-from: ${{ steps.cache.outputs.USE_CACHE == 'true' && 'type=gha,scope=frontend' || '' }}
          cache-to: ${{ steps.cache.outputs.USE_CACHE == 'true' && 'type=gha,mode=max,scope=frontend' || '' }}

      - name: Validate docker-compose config
        run: docker compose -f docker-compose.prod.yml config -q

