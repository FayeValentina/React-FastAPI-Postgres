name: Deploy to Oracle Cloud

on:
  push:
    branches:
      - master

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

env:
  DOMAIN_MAIN: ${{ vars.DOMAIN_MAIN }}
  FRONTEND_URL: https://${{ vars.DOMAIN_MAIN }}

jobs:
  # ====================================================================
  # CD Job - Deploy to Oracle Cloud (only on master branch push)
  # ====================================================================
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: production
      url: ${{ env.FRONTEND_URL }}

    steps:
      - name: Deploy to Oracle Cloud
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.OCI_SSH_HOST }}
          username: ${{ secrets.OCI_SSH_USER }}
          key: ${{ secrets.OCI_SSH_KEY }}
          command_timeout: 300m
          script: |
            set -euo pipefail

            cd ~/web-app

            echo "Pulling latest code..."
            git pull origin master

            # Create production environment file temporarily (required by compose env_file directives)
            echo "Creating production environment file (temporary)..."
            echo '${{ secrets.ENV_PROD_VARS }}' > .env.prod
            trap 'rm -f .env.prod' EXIT

            echo "Ensuring nginx entrypoint permissions..."
            chmod +x nginx/entrypoint.sh || true
            sed -i 's/\r$//' nginx/entrypoint.sh || true

            echo "Building production images..."
            docker compose -f docker-compose.prod.yml --env-file .env.prod build

            echo "Stopping existing services..."
            docker compose -f docker-compose.prod.yml --env-file .env.prod down

            echo "Starting new services..."
            docker compose -f docker-compose.prod.yml --env-file .env.prod up -d --pull always

            echo "Waiting for services to be ready (up to 10 minutes)..."
            timeout 600s bash -c ' \
              until curl -fsS http://localhost/api/health > /dev/null; do \
                echo "Service not ready yet, retrying in 5 seconds..."; \
                sleep 5; \
              done'

            echo "Checking service status..."
            docker compose -f docker-compose.prod.yml ps

            echo "Cleaning up unused Docker resources..."
            docker system prune -af

            echo "Deployment completed successfully!"
