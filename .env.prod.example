# =================================
# 生产环境配置文件示例
# 复制为 .env.prod 并填入真实值
# =================================

# === 应用基础配置 ===
ENVIRONMENT=production
PROJECT_NAME="FastAPI Backend"
VERSION="1.0.0"

# === 数据库配置 ===
POSTGRES_HOST=postgres
POSTGRES_USER=postgres
POSTGRES_PASSWORD=change_me_strong
POSTGRES_DB=postgres
POSTGRES_PORT=5432

# === 安全配置 ===
SECRET_KEY=please-change-to-a-long-random-string
ACCESS_TOKEN_EXPIRE_MINUTES=30
REFRESH_TOKEN_EXPIRE_DAYS=7
ALGORITHM=HS256

# === 服务端口配置 ===
BACKEND_PORT=8000
FRONTEND_PORT=3000

# === Redis配置 ===
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_DB=0

# === RabbitMQ配置 ===
RABBITMQ_HOST=rabbitmq
RABBITMQ_PORT=5672
RABBITMQ_USER=guest
RABBITMQ_PASSWORD=guest
RABBITMQ_VHOST=/
RABBITMQ_PLUGIN_PORT=15672

# === TaskIQ配置 ===
TASKIQ_WORKER_CONCURRENCY=2
LOG_LEVEL=WARNING

# === PgAdmin配置 ===
PGADMIN_DEFAULT_EMAIL=admin@yourdomain.com
PGADMIN_DEFAULT_PASSWORD=please_change
PGADMIN_CONFIG_SERVER_MODE=True
PGADMIN_CONFIG_ENHANCED_COOKIE_PROTECTION=True
PGADMIN_CONFIG_WTF_CSRF_ENABLED=True

# === 动态 Nginx 配置（必填）===
DOMAIN_MAIN=yourdomain.com
SUBDOMAIN_PORTAINER=portainer
SUBDOMAIN_PGADMIN=pgadmin
SUBDOMAIN_REDIS=redis

# ==================================
# OAuth2-Proxy Settings
# ==================================
OAUTH2_PROXY_CLIENT_ID="YOUR_GITHUB_CLIENT_ID"
OAUTH2_PROXY_CLIENT_SECRET="YOUR_GITHUB_CLIENT_SECRET"
OAUTH2_PROXY_PROVIDER="github"
OAUTH2_PROXY_REVERSE_PROXY="true"

# Generate with: openssl rand -base64 32
# Use the 'base64:' prefix so oauth2-proxy decodes it to 32 raw bytes
OAUTH2_PROXY_COOKIE_SECRET="base64:PASTE_BASE64_32BYTE"
OAUTH2_PROXY_REDIRECT_URL="https://auth.${DOMAIN_MAIN}/oauth2/callback"
OAUTH2_PROXY_EMAIL_DOMAINS="*"                        # example OAUTH2_PROXY_EMAIL_DOMAINS=gmail only allow gmail to pass
#OAUTH2_PROXY_GITHUB_ORG="your-github-org"            # optional: restrict to a GitHub org
#OAUTH2_PROXY_GITHUB_TEAM="org/team-slug"             # optional: restrict to a GitHub team
#OAUTH2_PROXY_GITHUB_USERS="user1,user2"              # optional: restrict to specific GitHub usernames

OAUTH2_PROXY_SET_XAUTHREQUEST="true"
OAUTH2_PROXY_PASS_ACCESS_TOKEN="true"
OAUTH2_PROXY_HTTP_ADDRESS="0.0.0.0:4180"
OAUTH2_PROXY_UPSTREAMS="static://200"

# Session and cookie settings
OAUTH2_PROXY_COOKIE_EXPIRE="12h0m0s"
OAUTH2_PROXY_COOKIE_REFRESH="1h0m0s"
OAUTH2_PROXY_COOKIE_HTTPONLY="true"
OAUTH2_PROXY_COOKIE_CSRF_PER_REQUEST="true"
OAUTH2_PROXY_COOKIE_CSRF_EXPIRE="15m"

# Share a single login across all subdomains
OAUTH2_PROXY_COOKIE_DOMAINS=".your-domain.com"
OAUTH2_PROXY_WHITELIST_DOMAINS=".your-domain.com"   # allow rd=https://<subdomain>.your-domain.com redirects
OAUTH2_PROXY_COOKIE_SAMESITE="lax"
OAUTH2_PROXY_COOKIE_SECURE="true"

# health
OAUTH2_PROXY_SKIP_AUTH_ROUTES="^/(health|nginx-health|ping)$"

# === 前端 URL（用于前端构建注入 API 地址）===
FRONTEND_URL=https://yourdomain.com
VITE_API_URL=https://yourdomain.com/api

# === 证书文件命名（固定文件名，无需环境变量）===
# 请将证书放置于：
# nginx/ssl/server.pem
# nginx/ssl/server.key

# === LLM / RAG 配置 ===
CHAT_BASE_URL=http://chat_server:8080/v1
CHAT_API_KEY=sk-local
CLASSIFIER_BASE_URL=http://clf_server:8080/v1
CLASSIFIER_API_KEY=sk-classifier
HF_TOKEN=
CHAT_REPO_ID=google/gemma-3-4b-it-qat-q4_0-gguf
CHAT_FILENAME=gemma-3-4b-it-q4_0.gguf
CHAT_REVISION=main
CLASSIFIER_REPO_ID=google/gemma-3-4b-it-qat-q4_0-gguf
CLASSIFIER_FILENAME=gemma-3-4b-it-q4_0.gguf
CLASSIFIER_REVISION=main
HF_HUB_ENABLE_HF_TRANSFER=1
EMBEDDING_MODEL=intfloat/multilingual-e5-base  # 768-dim embedding vectors
RERANKER_MODEL=BAAI/bge-reranker-base
RAG_TOP_K=3
RAG_MIN_SIM=0.4
RAG_MMR_LAMBDA=0.6
RAG_PER_DOC_LIMIT=5
RAG_OVERSAMPLE=5
RAG_MAX_CANDIDATES=100
RAG_SAME_LANG_BONUS=0.12
RAG_CONTEXT_TOKEN_BUDGET=2400
RAG_CONTEXT_MAX_EVIDENCE=12
RAG_CHUNK_TARGET_TOKENS_EN=260
RAG_CHUNK_TARGET_TOKENS_CJK=420
RAG_CHUNK_TARGET_TOKENS_DEFAULT=320
RAG_CHUNK_OVERLAP_RATIO=0.15
RAG_CODE_CHUNK_MAX_LINES=40
RAG_CODE_CHUNK_OVERLAP_LINES=6
RAG_IVFFLAT_PROBES=10
CLASSIFIER_MODEL=gemma-3-4b-it-q4_0.gguf
