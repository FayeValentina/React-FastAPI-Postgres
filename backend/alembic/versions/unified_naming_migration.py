"""Rename task_config_id to config_id for unified naming

Revision ID: unified_naming_001
Revises: c0251344b270
Create Date: 2025-08-13 07:45:00.000000

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'unified_naming_001'
down_revision: Union[str, None] = 'c0251344b270'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # 1. 重命名 schedule_events 表中的 task_config_id 列为 config_id
    op.drop_constraint('schedule_events_task_config_id_fkey', 'schedule_events', type_='foreignkey')
    op.drop_index('ix_schedule_events_task_config_id', table_name='schedule_events')
    op.alter_column('schedule_events', 'task_config_id', new_column_name='config_id')
    op.create_index('ix_schedule_events_config_id', 'schedule_events', ['config_id'], unique=False)
    op.create_foreign_key('schedule_events_config_id_fkey', 'schedule_events', 'task_configs', ['config_id'], ['id'])
    
    # 2. 重命名 task_executions 表中的 task_config_id 列为 config_id
    op.drop_constraint('task_executions_task_config_id_fkey', 'task_executions', type_='foreignkey')
    op.drop_index('ix_task_executions_task_config_id', table_name='task_executions')
    op.alter_column('task_executions', 'task_config_id', new_column_name='config_id')
    op.create_index('ix_task_executions_config_id', 'task_executions', ['config_id'], unique=False)
    op.create_foreign_key('task_executions_config_id_fkey', 'task_executions', 'task_configs', ['config_id'], ['id'])
    
    # 3. 更新 task_configs 表的状态枚举从 TaskStatus 到 ConfigStatus
    # 首先创建新的枚举类型
    configstatus_enum = postgresql.ENUM('ACTIVE', 'INACTIVE', 'PAUSED', 'ERROR', name='configstatus')
    configstatus_enum.create(op.get_bind())
    
    # 然后更改列类型（使用 PostgreSQL 的类型转换）
    op.execute("ALTER TABLE task_configs ALTER COLUMN status TYPE configstatus USING status::text::configstatus")
    
    # 删除旧的枚举类型
    op.execute("DROP TYPE taskstatus")
    
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # 1. 回滚 task_configs 表的状态枚举从 ConfigStatus 到 TaskStatus
    # 首先创建旧的枚举类型
    taskstatus_enum = postgresql.ENUM('ACTIVE', 'INACTIVE', 'PAUSED', 'ERROR', name='taskstatus')
    taskstatus_enum.create(op.get_bind())
    
    # 然后更改列类型（使用 PostgreSQL 的类型转换）
    op.execute("ALTER TABLE task_configs ALTER COLUMN status TYPE taskstatus USING status::text::taskstatus")
    
    # 删除新的枚举类型
    op.execute("DROP TYPE configstatus")
    
    # 2. 回滚 task_executions 表中的 config_id 列为 task_config_id
    op.drop_constraint('task_executions_config_id_fkey', 'task_executions', type_='foreignkey')
    op.drop_index('ix_task_executions_config_id', table_name='task_executions')
    op.alter_column('task_executions', 'config_id', new_column_name='task_config_id')
    op.create_index('ix_task_executions_task_config_id', 'task_executions', ['task_config_id'], unique=False)
    op.create_foreign_key('task_executions_task_config_id_fkey', 'task_executions', 'task_configs', ['task_config_id'], ['id'])
    
    # 3. 回滚 schedule_events 表中的 config_id 列为 task_config_id
    op.drop_constraint('schedule_events_config_id_fkey', 'schedule_events', type_='foreignkey')
    op.drop_index('ix_schedule_events_config_id', table_name='schedule_events')
    op.alter_column('schedule_events', 'config_id', new_column_name='task_config_id')
    op.create_index('ix_schedule_events_task_config_id', 'schedule_events', ['task_config_id'], unique=False)
    op.create_foreign_key('schedule_events_task_config_id_fkey', 'schedule_events', 'task_configs', ['task_config_id'], ['id'])
    
    # ### end Alembic commands ###